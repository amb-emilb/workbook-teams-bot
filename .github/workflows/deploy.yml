name: Deploy to Azure

on:
  push:
    branches: [ main, production ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔍 Run security audit
      run: npm audit --audit-level=high
      continue-on-error: true
      
    - name: 🧪 Run tests
      run: npm test
      continue-on-error: true
      
    - name: 📋 Run linting
      run: npm run lint
      
    - name: 🔍 Type checking
      run: npm run typecheck
      
    - name: 🏗️ Build application
      run: npm run build
      
    - name: 📦 Create deployment package
      run: |
        zip -r deploy.zip dist package.json package-lock.json teams-app
        
    - name: 📤 Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: deployment-package
        path: deploy.zip

  deploy-to-staging:
    if: github.event_name == 'pull_request'
    needs: build-and-test
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://workbook-teams-bot-staging.azurewebsites.net
    
    steps:
    - name: 📥 Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: deployment-package
        
    - name: 🔐 Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: 🚀 Deploy to staging
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ vars.AZURE_WEBAPP_NAME }}-staging
        package: deploy.zip
        
    - name: 🔍 Health check
      run: |
        sleep 30
        curl -f https://${{ vars.AZURE_WEBAPP_NAME }}-staging.azurewebsites.net/health || exit 1

  deploy-to-production:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build-and-test
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://workbook-teams-bot.azurewebsites.net
    
    steps:
    - name: 📥 Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: deployment-package
        
    - name: 🔐 Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: 🚀 Deploy to production
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ vars.AZURE_WEBAPP_NAME }}
        package: deploy.zip
        
    - name: 🔧 Configure App Settings
      run: |
        az webapp config appsettings set \
          --resource-group ${{ vars.RESOURCE_GROUP }} \
          --name ${{ vars.AZURE_WEBAPP_NAME }} \
          --settings \
            MICROSOFT_APP_ID="${{ secrets.MICROSOFT_APP_ID }}" \
            MICROSOFT_APP_PASSWORD="${{ secrets.MICROSOFT_APP_PASSWORD }}" \
            KEY_VAULT_NAME="${{ vars.KEY_VAULT_NAME }}" \
            NODE_ENV=production \
            PORT=3978
        
    - name: 🔍 Health check
      run: |
        sleep 30
        curl -f https://${{ vars.AZURE_WEBAPP_NAME }}.azurewebsites.net/health || exit 1
        
    - name: 📊 Update Application Insights
      run: |
        az monitor app-insights component update \
          --app workbook-bot-insights \
          --resource-group ${{ vars.RESOURCE_GROUP }} \
          --set retentionInDays=90
      continue-on-error: true

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔒 Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
      continue-on-error: true
      
    - name: 🔍 Dependency review
      uses: actions/dependency-review-action@v3
      if: github.event_name == 'pull_request'