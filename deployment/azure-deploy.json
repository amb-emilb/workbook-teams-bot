{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appServiceName": {
      "type": "string",
      "defaultValue": "workbook-teams-bot",
      "metadata": {
        "description": "Name of the App Service"
      }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "workbook-bot-plan",
      "metadata": {
        "description": "Name of the App Service Plan"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "workbook-bot-kv-3821",
      "metadata": {
        "description": "Name of the Key Vault containing secrets"
      }
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "workbook-bot-insights",
      "metadata": {
        "description": "Name of Application Insights instance"
      }
    },
    "botAppId": {
      "type": "string",
      "metadata": {
        "description": "Microsoft App ID for the bot"
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "Azure AD Tenant ID for SingleTenant bot authentication"
      }
    }
  },
  "variables": {
    "appServicePlanSku": "F1",
    "keyVaultSkuName": "standard",
    "keyVaultSkuFamily": "A"
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-07-01",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "[variables('keyVaultSkuFamily')]",
          "name": "[variables('keyVaultSkuName')]"
        },
        "tenantId": "[subscription().tenantId]",
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": false,
        "enabledForDeployment": false,
        "enableRbacAuthorization": false,
        "accessPolicies": []
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('appServicePlanSku')]",
        "tier": "Free",
        "size": "F1",
        "family": "F",
        "capacity": 1
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[parameters('appServiceName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]"
      ],
      "kind": "app,linux",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "linuxFxVersion": "NODE|20-lts",
          "appSettings": [
            {
              "name": "NODE_ENV",
              "value": "dev"
            },
            {
              "name": "PORT",
              "value": "3978"
            },
            {
              "name": "KEY_VAULT_NAME",
              "value": "[parameters('keyVaultName')]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName'))).ConnectionString]"
            },
            {
              "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "XDT_MicrosoftApplicationInsights_Mode",
              "value": "recommended"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~20"
            }
          ],
          "nodeVersion": "20-lts",
          "alwaysOn": false,
          "webSocketsEnabled": true,
          "appCommandLine": "npm start"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2022-07-01",
      "name": "[concat(parameters('keyVaultName'), '/add')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
      ],
      "properties": {
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('appServiceName')), '2022-03-01', 'Full').identity.principalId]",
            "permissions": {
              "secrets": [
                "get",
                "list"
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.BotService/botServices",
      "apiVersion": "2022-09-15",
      "name": "[parameters('appServiceName')]",
      "location": "global",
      "sku": {
        "name": "F0",
        "tier": "Free"
      },
      "kind": "azurebot",
      "properties": {
        "displayName": "[parameters('appServiceName')]",
        "iconUrl": "https://docs.botframework.com/static/devportal/client/images/bot-framework-default.png",
        "endpoint": "[concat('https://', reference(resourceId('Microsoft.Web/sites', parameters('appServiceName'))).defaultHostName, '/api/messages')]",
        "msaAppId": "[parameters('botAppId')]",
        "msaAppType": "SingleTenant",
        "msaAppTenantId": "[parameters('tenantId')]",
        "luisAppIds": [],
        "schemaTransformationVersion": "1.3",
        "isCmekEnabled": false,
        "isIsolated": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
      ]
    }
  ],
  "outputs": {
    "appServiceUrl": {
      "type": "string",
      "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', parameters('appServiceName'))).defaultHostName)]"
    },
    "appServicePrincipalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('appServiceName')), '2022-03-01', 'Full').identity.principalId]"
    },
    "appInsightsInstrumentationKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName'))).InstrumentationKey]"
    },
    "appInsightsConnectionString": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName'))).ConnectionString]"
    },
    "botServiceEndpoint": {
      "type": "string", 
      "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', parameters('appServiceName'))).defaultHostName, '/api/messages')]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[parameters('keyVaultName')]"
    }
  }
}